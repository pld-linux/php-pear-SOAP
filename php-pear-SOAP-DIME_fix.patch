--- ./SOAP-0.6.2/Base.php.org	Fri Jul 12 17:46:30 2002
+++ ./SOAP-0.6.2/Base.php	Fri Jul 12 17:51:15 2002
@@ -20,18 +20,18 @@
 // $Id$
 //
 
-/*
-   SOAP_OBJECT_STRUCT makes pear::soap use objects for soap structures
-   rather than arrays.  This has been done to provide a closer match to php-soap.
-   If the old behaviour is needed, set to false.  The old behaviour is depricated.
-*/
+/* 
+ * SOAP_OBJECT_STRUCT makes PEAR::soap use objects for soap structures
+ * rather than arrays.  This has been done to provide a closer match to php-soap.
+ * If the old behaviour is needed, set to false.  The old behaviour is depricated.
+ */
 $SOAP_OBJECT_STRUCT = TRUE;
 /*
-   SOAP_RAW_CONVERT makes pear::soap attempt to determine what SOAP type
-   a php string COULD be.  This may result in slightly better interoperability when
-   you are not using WSDL, and are being lazy and not using SOAP_Value to define
-   types for your values.
-*/
+ * SOAP_RAW_CONVERT makes PEAR::soap attempt to determine what SOAP type
+ * a php string COULD be.  This may result in slightly better interoperability when
+ * you are not using WSDL, and are being lazy and not using SOAP_Value to define
+ * types for your values.
+ */
 $SOAP_RAW_CONVERT = FALSE;
 
 require_once 'PEAR.php';
@@ -50,7 +50,7 @@
 }
 
 @include_once 'Net/DIME.php';
-if (class_exists('DIME_Message')) {
+if (class_exists('Net_DIME_Message')) {
     $SOAP_options['DIME'] = 1;
 }
 
@@ -527,7 +527,7 @@
             }
             break;
         case 'array':
-            // XXX hashes always get done as structs by pear::soap
+            // XXX hashes always get done as structs by PEAR::soap
             $type = $this->isHash($value)?'Struct':'Array';
             break;
         case 'integer':
@@ -802,7 +802,7 @@
         // encode any attachments
         // see http://search.ietf.org/internet-drafts/draft-nielsen-dime-soap-00.txt
         // now we have to DIME encode the message
-        $dime = new DIME_Message();
+        $dime = new Net_DIME_Message();
         $msg = $dime->encodeData($xml,SOAP_ENVELOP,NULL,DIME_TYPE_URI);
         
         // add the attachements
@@ -869,7 +869,7 @@
         
         // XXX this SHOULD be moved to the transport layer, e.g. PHP  itself
         // should handle parsing DIME ;)
-        $dime = new DIME_Message();
+        $dime = new Net_DIME_Message();
         $dime->decodeData($data);
         if (strcasecmp($dime->parts[0]['type'],SOAP_ENVELOP) !=0 ||
             strcasecmp($dime->parts[0]['type'],SOAP_ENVELOP) !=0) {
@@ -941,4 +941,4 @@
         return $this->name;
     }
 }
-?>
\ No newline at end of file
+?>
--- ./SOAP-0.6.2/Parser.php.org	Fri Jul 12 18:01:35 2002
+++ ./SOAP-0.6.2/Parser.php	Fri Jul 12 18:02:00 2002
@@ -189,13 +189,13 @@
         }
         // add current node's value
         if ($response) {
-            $nqn = new Qname($this->message[$pos]['name'],$this->message[$pos]['namespace']);
-            $tqn = new Qname($this->message[$pos]['type'],$this->message[$pos]['type_namespace']);
+            $nqn = new QName($this->message[$pos]['name'],$this->message[$pos]['namespace']);
+            $tqn = new QName($this->message[$pos]['type'],$this->message[$pos]['type_namespace']);
             $response = new SOAP_Value($nqn->fqn(), $tqn->fqn(), $response, $attrs);
             if (isset($this->message[$pos]['arrayType'])) $response->arrayType = $this->message[$pos]['arrayType'];
         } else {
-            $nqn = new Qname($this->message[$pos]['name'],$this->message[$pos]['namespace']);
-            $tqn = new Qname($this->message[$pos]['type'],$this->message[$pos]['type_namespace']);
+            $nqn = new QName($this->message[$pos]['name'],$this->message[$pos]['namespace']);
+            $tqn = new QName($this->message[$pos]['type'],$this->message[$pos]['type_namespace']);
             $response = new SOAP_Value($nqn->fqn(), $tqn->fqn(), $this->message[$pos]['cdata'], $attrs);
         }
         // handle header attribute that we need
@@ -507,4 +507,4 @@
     }
 }
 
-?>
\ No newline at end of file
+?>
